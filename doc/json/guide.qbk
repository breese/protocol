[/ 
  Copyright (C) 2017 Bjorn Reese <breese@users.sourceforge.net>

  Distributed under the Boost Software License, Version 1.0.
     (See accompanying file LICENSE_1_0.txt or copy at
           http://www.boost.org/LICENSE_1_0.txt).
]

[#protocol.json.guide]
[section User Guide]

__protocol__ can process JSON incrementally or via serialization.
Incremental processing handles JSON one token at the time, whereas
serialization processes the entire JSON buffer in a single operation.
A [link protocol.json.token token] is a single element in the JSON grammar,
such as a number, a string, the beginning or the end of an array.

Incremental processing has a lower-level interface than serialization or
document processing, but even though incremental processing is more laborious to
use, it covers more use cases and can be used more efficiently.
Some examples of these use cases are:

* The input and output serialization archives are build on top of incremental
  parser and generators.
* Certain operations on JSON buffers does not require that individual JSON
  elements, such as JSON escaped strings, are converted into in-memory data
  structures. For instance, searching for data in a JSON file, or pretty-printing
  the content of a JSON file.
* We can build other parser types from an incremental parser, such as the push
  parser in the tutorials.

[section Incremental Processing]

Incremental processing is a low-level API which regards JSON as a sequence of
tokens to be processed one by one.

[include token.qbk]
[include error.qbk]
[include reader.qbk]
[include writer.qbk]

[endsect]

[section Serialization]

[include iarchive.qbk]
[include oarchive.qbk]

[endsect]

[section Tree processing]
[endsect]

[endsect]
